#include <iostream>                                        //Программа считает числа Фиббоначчи тремя способами
#include <ctime>
using namespace std;

long long recursion(int n) {                               //Подсчет через рекурсию
	if (n == 0) return 0;
	else if (n == 1) return 1;
	else return (recursion(n - 1) + recursion(n - 2));
}

long long cycle(int n) {                                    //Подсчет с использованием цикла
	int i;
	long long* x = new long long[n];
	x[0] = 0;
	x[1] = 1;
	for (i = 2; i <= n; ++i) {
		x[i] = x[i - 1] + x[i - 2];
	}
	return x[n];
}

long long** multipl(long long** a,long long** b) {          //Функция, возвращающая произведение двух матриц 2*2
	long long** c = new long long* [2];
	for (int i = 0; i < 2; ++i) {
		c[i] = new long long[2];
	}
	for (int i = 0; i < 2; ++i) {
		for (int j = 0; j < 2; ++j) {
			c[i][j] = a[i][0] * b[0][j] + a[i][1] * b[1][j];
		}
	}
	return c;
};
long long matrix(int n) {                                  //Подсчет с использованием матриц
	int i;
	long long** a = new long long* [2];
	for (i = 0; i < 2; ++i) {
		a[i] = new long long[2];
	}
	a[0][0] = 1;
	a[0][1] = 1;
	a[1][0] = 1;
	a[1][1] = 0;

	long long** c = new long long* [2];
	for (i = 0; i < 2; ++i) {
		c[i] = new long long[2];
	}
	c[0][0] = 1;
	c[0][1] = 0;
	c[1][0] = 0;
	c[1][1] = 1;

	int m = n - 1;
	while (m != 0) {
		if (m % 2 == 1) {
			m = m - 1;
			c = multipl(c,a);
		}
		else {
			m = m / 2;
			a = multipl(a, a);
		}
	}
	
	return c[0][0];
}

int main() {
	int x;
	cout << "Choose the way:" << endl << "1 - recursion" << endl << "2 - cycle" << endl << "3 - matrix" << endl;
	cin >> x;
	if (x == 1) {
		cout << recursion(9) << endl;
		cout << recursion(34) << endl;
		cout << recursion(50) << endl;
	}
	if (x == 2) {
		cout << cycle(9) << endl;
		cout << cycle(34) << endl;
		cout << cycle(50) << endl;
	}
	if (x == 3) {
		cout << matrix(9) << endl;
		cout << matrix(34) << endl;
		cout << matrix(50) << endl;
	}
	//F9=34   F34=5702887   F50=12586269025
	return 0;
}
